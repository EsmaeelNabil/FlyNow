/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package flyNow

import flyNow.build.GenerateApkTask
import flyNow.drive.UploadToDriveTask
import flyNow.slack.SlackNotifierTask
import flyNow.utils.EXTENSION_NAME
import flyNow.utils.FlyNow
import org.gradle.api.Project
import org.gradle.api.Plugin
import org.gradle.kotlin.dsl.create
import org.gradle.kotlin.dsl.register

class FlyManager : Plugin<Project> {
    override fun apply(project: Project) {

        val configs = project.extensions.create<FlyNow>(EXTENSION_NAME)

        project.tasks.register<GenerateApkTask>("generateApk") {
            dependsOn("assembleDebug")
        }

        project.tasks.register<UploadToDriveTask>("uploadApk") {
            dependsOn("generateApk")
            client_id.set(configs.clientId.get())
            client_secret.set(configs.clientSecret.get())
        }

        project.tasks.register<SlackNotifierTask>("notifySlack") {
            dependsOn("uploadApk")

            botUserName.set(configs.botName.getOrElse("FlyNow"))

            // slack user id or name
            authorName.set(configs.authorName.getOrElse("*FlyNow*"))

            useCustomMessage.set(configs.useCustomMessage.getOrElse(false))

            customMessage.set(configs.customMessage.getOrElse("A default custom message"))

            channelWebhook.set(configs.channelWebhook.getOrElse("A default slack webhook"))
        }

        project.tasks.register("flyNow") {
            val hasMessage = project.hasProperty("message")
            val customMessageValue = project.property("message").toString()
            val shouldUseCustomMessage = configs.useCustomMessage.getOrElse(false)

            if (shouldUseCustomMessage && hasMessage)
                configs.customMessage.set(customMessageValue)

            dependsOn("notifySlack")
        }

    }
}


